version: '3.9'
services:
  db:
    image: postgres:15
    environment: { POSTGRES_PASSWORD: postgres, POSTGRES_DB: cysictd }
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ['CMD-SHELL','pg_isready -U postgres']
      interval: 5s
      timeout: 3s
      retries: 10
  api:
    build: { context: .., dockerfile: infra/api.Dockerfile }
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SERVER_SALT: ${SERVER_SALT}
      RESERVED_NICKS: ${RESERVED_NICKS}
      ADMIN_TOKEN: ${ADMIN_TOKEN}
      SEASON_LENGTH_DAYS: ${SEASON_LENGTH_DAYS}
      PORT: 3000
    depends_on: { db: { condition: service_healthy } }
  cloudflared:
    image: cloudflare/cloudflared:latest
    command: tunnel --url http://api:3000
    depends_on: [api]
    restart: unless-stopped
volumes: { dbdata: {} }
